barplot(tapply(dev, days, mean), names.arg=levels(days),
las=2, col=c(coldays[4], coldays[6]),main='Model under H1') #, ylim=c(0,max(dev))
dev.off()
### verify the assumptions:
# 1) normality (univariate) in each group (2 tests)
Ps <- c(shapiro.test(dev[ days==group[1] ])$p,
shapiro.test(dev[ days==group[2] ])$p)
Ps
# 2) same covariance structure (= same sigma^2)
Var <- c(var(dev[ days==group[1] ]),
var(dev[ days==group[2] ]));
Var #1023478894  516823433
x11()
# test of homogeneity of variances
# H0: sigma.1 = sigma.2 = sigma.3 = sigma.4 = sigma.5 = sigma.6
# H1: there exist i,j s.t. sigma.i!=sigma.j
bartlett.test(dev, days)
fit <- aov(dev ~ days)
summary(fit)
#dha = device home area
dev <- rep(0.0, times = n*2);
group <- c('weekday', 'weekend');
days <- rep(group, times = n);
for (i in seq(1,n,2)){
j <- match(area[i],CensusBlockGroup);
dev[2*i -1] <- sum(weekday_device_home_areas[[i]]) / area_cbg[j];
dev[2*i] <- sum(weekend_device_home_areas[[i]])  / area_cbg[j];
}
# x11()
png(file = "Manhattan boxplot with density dha.png")
boxplot( dev ~ days, main = "weekdays vs weekend")
dev.off()
#x11()
png(file = "Manhattan barplot with density dha.png")
par(mfrow=c(1,2), las = 2)
barplot(rep(mean(dev),2), names.arg=levels(days),
las=2, col='grey85', main='Model under H0') # ylim=c(0,max(dev))
barplot(tapply(dev, days, mean), names.arg=levels(days),
las=2, col=c(coldays[4], coldays[6]),main='Model under H1') #, ylim=c(0,max(dev))
dev.off()
### verify the assumptions:
# 1) normality (univariate) in each group (2 tests)
Ps <- c(shapiro.test(dev[ days==group[1] ])$p,
shapiro.test(dev[ days==group[2] ])$p)
Ps
# 2) same covariance structure (= same sigma^2)
Var <- c(var(dev[ days==group[1] ]),
var(dev[ days==group[2] ]));
Var
x11()
# test of homogeneity of variances
# H0: sigma.1 = sigma.2 = sigma.3 = sigma.4 = sigma.5 = sigma.6
# H1: there exist i,j s.t. sigma.i!=sigma.j
bartlett.test(dev, days)
fit <- aov(dev ~ days)
summary(fit)
area_cbg=matrix(nrow = 1, ncol = n)
for (i in 1:n) {
coords=CBG_ny_no_river$geometry[[i]][[1]][[1]]
area_cbg[i]=areaPolygon(coords);
}
area_cbg=area_cbg/10^6;
#______________________________________________________________________________
#1 - grouped all Manhattan (NY County ) CBGs MEAN n.of devices in
#weekdays(work days) (Mon-Fri) and weekend days(Sat-Sun) vectors
dev <- rep(0.0, times = n*2);
group <- c('weekday', 'weekend');
days <- rep(group, times = n);
for (i in seq(1,n,2)){
j <- match(area[i],CensusBlockGroup);
tot = c(stops_by_day[[i]][seq(1,30,7)], stops_by_day[[i]][seq(2,30,7)],
stops_by_day[[i]][seq(3,30,7)], stops_by_day[[i]][seq(4,30,7)],
stops_by_day[[i]][seq(5,30,7)]);
dev[i] = mean(tot)/area_cbg[j];
tot <- c(stops_by_day[[i]][seq(6,30,7)], stops_by_day[[i]][seq(7,30,7)]);
dev[i+1] <- mean(tot)/area_cbg[j];
}
# x11()
png(file = "Manhattan boxplot with density stops_by_day.png")
boxplot( dev ~ days, main = "weekdays vs weekend")
dev.off()
#x11()
png(file = "Manhattan barplot with density stops_by_day.png")
par(mfrow=c(1,2), las = 2)
barplot(rep(mean(dev),2), names.arg=levels(days),
las=2, col='grey85', main='Model under H0') # ylim=c(0,max(dev))
barplot(tapply(dev, days, mean), names.arg=levels(days),
las=2, col=c(coldays[4], coldays[6]),main='Model under H1') #, ylim=c(0,max(dev))
dev.off()
# test of homogeneity of variances
# H0: sigma.1 = sigma.2 = sigma.3 = sigma.4 = sigma.5 = sigma.6
# H1: there exist i,j s.t. sigma.i!=sigma.j
bartlett.test(dev, days)
fit <- aov(dev ~ days)
summary(fit)
j <- match(area[i],CensusBlockGroup);
#______________________________________________________________________________
#1 - grouped all Manhattan (NY County ) CBGs MEAN n.of devices in
#weekdays(work days) (Mon-Fri) and weekend days(Sat-Sun) vectors
dev <- rep(0.0, times = n*2);
group <- c('weekday', 'weekend');
days <- rep(group, times = n);
for (i in seq(1,n,2)){
tot = c(stops_by_day[[i]][seq(1,30,7)], stops_by_day[[i]][seq(2,30,7)],
stops_by_day[[i]][seq(3,30,7)], stops_by_day[[i]][seq(4,30,7)],
stops_by_day[[i]][seq(5,30,7)]);
dev[i] = mean(tot)/area_cbg[i];
tot <- c(stops_by_day[[i]][seq(6,30,7)], stops_by_day[[i]][seq(7,30,7)]);
dev[i+1] <- mean(tot)/area_cbg[i];
}
# x11()
png(file = "Manhattan boxplot with density stops_by_day.png")
boxplot( dev ~ days, main = "weekdays vs weekend")
dev.off()
#x11()
png(file = "Manhattan barplot with density stops_by_day.png")
par(mfrow=c(1,2), las = 2)
barplot(rep(mean(dev),2), names.arg=levels(days),
las=2, col='grey85', main='Model under H0') # ylim=c(0,max(dev))
barplot(tapply(dev, days, mean), names.arg=levels(days),
las=2, col=c(coldays[4], coldays[6]),main='Model under H1') #, ylim=c(0,max(dev))
dev.off()
### verify the assumptions:
# 1) normality (univariate) in each group (2 tests)
Ps <- c(shapiro.test(dev[ days==group[1] ])$p,
shapiro.test(dev[ days==group[2] ])$p)
Ps
# 2) same covariance structure (= same sigma^2)
Var <- c(var(dev[ days==group[1] ]),
var(dev[ days==group[2] ]));
Var #1023478894  516823433
# test of homogeneity of variances
# H0: sigma.1 = sigma.2 = sigma.3 = sigma.4 = sigma.5 = sigma.6
# H1: there exist i,j s.t. sigma.i!=sigma.j
bartlett.test(dev, days)
fit <- aov(dev ~ days)
summary(fit)
# Load Dataset
load("/home/terri/Documenti/UNIVERSITA/STAT APP/progetto/gitcode/Applied-statistics-project/DATASET/NYC_no_river.RData")
load("/home/terri/Documenti/UNIVERSITA/STAT APP/progetto/gitcode/Applied-statistics-project/DATASET/CBG_NY_no_river.RData")
New_York_County_no_river=New_York_County_no_river[order(New_York_County_no_river$area),]
attach(CBG_ny_no_river)
attach(New_York_County_no_river)
library(RColorBrewer)
n <- dim(New_York_County_no_river)[1];
g1 <- length(day_counts[[1]]);
coldays <- brewer.pal(n = g1, name = 'Set2');
library(geosphere)
area_cbg=matrix(nrow = 1, ncol = n)
for (i in 1:n) {
coords=CBG_ny_no_river$geometry[[i]][[1]][[1]]
area_cbg[i]=areaPolygon(coords);
}
area_cbg=area_cbg/10^6;
area_cbg[n]
#______________________________________________________________________________
#1 - grouped all Manhattan (NY County ) CBGs MEAN n.of devices in
#weekdays(work days) (Mon-Fri) and weekend days(Sat-Sun) vectors
dev <- rep(0.0, times = n*2);
group <- c('weekday', 'weekend');
days <- rep(group, times = n);
for (i in seq(1,n,2)){
tot = c(stops_by_day[[i]][seq(1,30,7)], stops_by_day[[i]][seq(2,30,7)],
stops_by_day[[i]][seq(3,30,7)], stops_by_day[[i]][seq(4,30,7)],
stops_by_day[[i]][seq(5,30,7)]);
dev[i] = mean(tot)/area_cbg[i];
tot <- c(stops_by_day[[i]][seq(6,30,7)], stops_by_day[[i]][seq(7,30,7)]);
dev[i+1] <- mean(tot)/area_cbg[i];
}
# x11()
png(file = "Manhattan boxplot with density stops_by_day.png")
boxplot( dev ~ days, main = "weekdays vs weekend")
dev.off()
#x11()
png(file = "Manhattan barplot with density stops_by_day.png")
par(mfrow=c(1,2), las = 2)
barplot(rep(mean(dev),2), names.arg=levels(days),
las=2, col='grey85', main='Model under H0') # ylim=c(0,max(dev))
barplot(tapply(dev, days, mean), names.arg=levels(days),
las=2, col=c(coldays[4], coldays[6]),main='Model under H1') #, ylim=c(0,max(dev))
dev.off()
### verify the assumptions:
# 1) normality (univariate) in each group (2 tests)
Ps <- c(shapiro.test(dev[ days==group[1] ])$p,
shapiro.test(dev[ days==group[2] ])$p)
Ps
# 2) same covariance structure (= same sigma^2)
Var <- c(var(dev[ days==group[1] ]),
var(dev[ days==group[2] ]));
Var #1023478894  516823433
x11()
# test of homogeneity of variances
# H0: sigma.1 = sigma.2 = sigma.3 = sigma.4 = sigma.5 = sigma.6
# H1: there exist i,j s.t. sigma.i!=sigma.j
bartlett.test(dev, days)
fit <- aov(dev ~ days)
summary(fit)
#dha = device home area
dev <- rep(0.0, times = n*2);
group <- c('weekday', 'weekend');
days <- rep(group, times = n);
for (i in seq(1,n,2)){
j <- match(area[i],CensusBlockGroup);
dev[2*i -1] <- sum(weekday_device_home_areas[[i]]) / area_cbg[j];
dev[2*i] <- sum(weekend_device_home_areas[[i]])  / area_cbg[j];
}
# x11()
png(file = "Manhattan boxplot with density dha.png")
boxplot( dev ~ days, main = "weekdays vs weekend")
dev.off()
#x11()
png(file = "Manhattan barplot with density dha.png")
par(mfrow=c(1,2), las = 2)
barplot(rep(mean(dev),2), names.arg=levels(days),
las=2, col='grey85', main='Model under H0') # ylim=c(0,max(dev))
barplot(tapply(dev, days, mean), names.arg=levels(days),
las=2, col=c(coldays[4], coldays[6]),main='Model under H1') #, ylim=c(0,max(dev))
dev.off()
### verify the assumptions:
# 1) normality (univariate) in each group (2 tests)
Ps <- c(shapiro.test(dev[ days==group[1] ])$p,
shapiro.test(dev[ days==group[2] ])$p)
Ps
# 2) same covariance structure (= same sigma^2)
Var <- c(var(dev[ days==group[1] ]),
var(dev[ days==group[2] ]));
# test of homogeneity of variances
# H0: sigma.1 = sigma.2 = sigma.3 = sigma.4 = sigma.5 = sigma.6
# H1: there exist i,j s.t. sigma.i!=sigma.j
bartlett.test(dev, days)
fit <- aov(dev ~ days)
summary(fit)
dev[n]
#dha = device home area
dev <- rep(0.0, times = n*2);
group <- c('weekday', 'weekend');
days <- rep(group, times = n);
for (i in 1:n){
j <- match(area[i],CensusBlockGroup);
dev[2*i -1] <- sum(weekday_device_home_areas[[i]]) / area_cbg[j];
dev[2*i] <- sum(weekend_device_home_areas[[i]])  / area_cbg[j];
}
# x11()
png(file = "Manhattan boxplot with density dha.png")
boxplot( dev ~ days, main = "weekdays vs weekend")
dev.off()
#x11()
png(file = "Manhattan barplot with density dha.png")
par(mfrow=c(1,2), las = 2)
barplot(rep(mean(dev),2), names.arg=levels(days),
las=2, col='grey85', main='Model under H0') # ylim=c(0,max(dev))
barplot(tapply(dev, days, mean), names.arg=levels(days),
las=2, col=c(coldays[4], coldays[6]),main='Model under H1') #, ylim=c(0,max(dev))
dev.off()
### verify the assumptions:
# 1) normality (univariate) in each group (2 tests)
Ps <- c(shapiro.test(dev[ days==group[1] ])$p,
shapiro.test(dev[ days==group[2] ])$p)
Ps
# 2) same covariance structure (= same sigma^2)
Var <- c(var(dev[ days==group[1] ]),
var(dev[ days==group[2] ]));
Var # 32027028608  4555100539
# test of homogeneity of variances
# H0: sigma.1 = sigma.2 = sigma.3 = sigma.4 = sigma.5 = sigma.6
# H1: there exist i,j s.t. sigma.i!=sigma.j
bartlett.test(dev, days)
fit <- aov(dev ~ days)
summary(fit)
#______________________________________________________________________________
#1 - grouped all Manhattan (NY County ) CBGs MEAN n.of devices in
#weekdays(work days) (Mon-Fri) and weekend days(Sat-Sun) vectors
dev <- rep(0.0, times = n*2);
group <- c('weekday', 'weekend');
days <- rep(group, times = n);
for (i in seq(1,n,2)){
tot = c(stops_by_day[[i]][seq(1,30,7)], stops_by_day[[i]][seq(2,30,7)],
stops_by_day[[i]][seq(3,30,7)], stops_by_day[[i]][seq(4,30,7)],
stops_by_day[[i]][seq(5,30,7)]);
dev[i] = mean(tot)/area_cbg[i];
tot <- c(stops_by_day[[i]][seq(6,30,7)], stops_by_day[[i]][seq(7,30,7)]);
dev[i+1] <- mean(tot)/area_cbg[i];
}
# x11()
png(file = "Manhattan boxplot with density stops_by_day.png")
boxplot( dev ~ days, main = "weekdays vs weekend")
dev.off()
#x11()
png(file = "Manhattan barplot with density stops_by_day.png")
par(mfrow=c(1,2), las = 2)
barplot(rep(mean(dev),2), names.arg=levels(days),
las=2, col='grey85', main='Model under H0') # ylim=c(0,max(dev))
barplot(tapply(dev, days, mean), names.arg=levels(days),
las=2, col=c(coldays[4], coldays[6]),main='Model under H1') #, ylim=c(0,max(dev))
dev.off()
### verify the assumptions:
# 1) normality (univariate) in each group (2 tests)
Ps <- c(shapiro.test(dev[ days==group[1] ])$p,
shapiro.test(dev[ days==group[2] ])$p)
Ps
# 2) same covariance structure (= same sigma^2)
Var <- c(var(dev[ days==group[1] ]),
var(dev[ days==group[2] ]));
Var #1023478894  516823433
x11()
fit <- aov(dev ~ days)
summary(fit)
#terri
load("/home/terri/Documenti/UNIVERSITA/STAT APP/progetto/gitcode/Applied-statistics-project/DATASET/NYC_no_river.RData")
load("/home/terri/Documenti/UNIVERSITA/STAT APP/progetto/gitcode/Applied-statistics-project/DATASET/CBG_NY_no_river.RData")
New_York_County_no_river=New_York_County_no_river[order(New_York_County_no_river$area),]
CBG_ny_no_river=CBG_ny_no_river[order(CBG_ny_no_river$CensusBlockGroup),]
#install.packages("RColorBrewer")
library(RColorBrewer)
load("/home/terri/Documenti/UNIVERSITA/STAT APP/progetto/gitcode/Applied-statistics-project/DATASET/CBG_NY_no_river.RData")
New_York_County_no_river=New_York_County_no_river[order(New_York_County_no_river$area),]
CBG_ny_no_river=CBG_ny_no_river[order(CBG_ny_no_river$CensusBlockGroup),]
attach(CBG_ny_no_river)
attach(New_York_County_no_river)
library(RColorBrewer)
n <- dim(New_York_County_no_river)[1];
g1 <- length(day_counts[[1]]);
coldays <- brewer.pal(n = g1, name = 'Set2');
#_______________________________________________________________________________
#1 - grouped all Manhattan (NY County ) CBGs MEAN n.of devices in
#weekdays(work days) (Mon-Fri) and weekend days(Sat-Sun) vectors
dev <- rep(0.0, times = n*2);
area_cbg=matrix(nrow = 1, ncol = n)
for (i in 1:n) {
coords=CBG_ny_no_river$geometry[[i]][[1]][[1]]
area_cbg[i]=areaPolygon(coords);
}
area_cbg=area_cbg/10^6;
#______________________________________________________________________________
#1 - grouped all Manhattan (NY County ) CBGs MEAN n.of devices in
#weekdays(work days) (Mon-Fri) and weekend days(Sat-Sun) vectors
dev <- rep(0.0, times = n*2);
group <- c('weekday', 'weekend');
days <- rep(group, times = n);
for (i in seq(1,n,2)){
tot = c(stops_by_day[[i]][seq(1,30,7)], stops_by_day[[i]][seq(2,30,7)],
stops_by_day[[i]][seq(3,30,7)], stops_by_day[[i]][seq(4,30,7)],
stops_by_day[[i]][seq(5,30,7)]);
dev[i] = mean(tot)/area_cbg[i];
tot <- c(stops_by_day[[i]][seq(6,30,7)], stops_by_day[[i]][seq(7,30,7)]);
dev[i+1] <- mean(tot)/area_cbg[i];
}
# x11()
png(file = "Manhattan boxplot with density stops_by_day.png")
boxplot( dev ~ days, main = "weekdays vs weekend")
dev.off()
#x11()
png(file = "Manhattan barplot with density stops_by_day.png")
par(mfrow=c(1,2), las = 2)
barplot(rep(mean(dev),2), names.arg=levels(days),
las=2, col='grey85', main='Model under H0') # ylim=c(0,max(dev))
barplot(tapply(dev, days, mean), names.arg=levels(days),
las=2, col=c(coldays[4], coldays[6]),main='Model under H1') #, ylim=c(0,max(dev))
dev.off()
### verify the assumptions:
# 1) normality (univariate) in each group (2 tests)
Ps <- c(shapiro.test(dev[ days==group[1] ])$p,
shapiro.test(dev[ days==group[2] ])$p)
Ps
# 2) same covariance structure (= same sigma^2)
Var <- c(var(dev[ days==group[1] ]),
var(dev[ days==group[2] ]));
Var #1023478894  516823433
x11()
# test of homogeneity of variances
# H0: sigma.1 = sigma.2 = sigma.3 = sigma.4 = sigma.5 = sigma.6
# H1: there exist i,j s.t. sigma.i!=sigma.j
bartlett.test(dev, days)
fit <- aov(dev ~ days)
summary(fit)
#terri
load("/home/terri/Documenti/UNIVERSITA/STAT APP/progetto/gitcode/Applied-statistics-project/DATASET/NYC_no_river.RData")
load("/home/terri/Documenti/UNIVERSITA/STAT APP/progetto/gitcode/Applied-statistics-project/DATASET/CBG_NY_no_river.RData")
New_York_County_no_river=New_York_County_no_river[order(New_York_County_no_river$area),]
CBG_ny_no_river=CBG_ny_no_river[order(CBG_ny_no_river$CensusBlockGroup),]
#install.packages("RColorBrewer")
library(RColorBrewer)
#install.packages("viridis")
library("viridis")
g1 <-5
g2 <- 2;
coldays <- brewer.pal(n = 7, name = 'Set2');
colcountyNY <-brewer.pal(n = 7, name = 'Accent');
n <- dim( New_York_County_no_river)[1];
attach( New_York_County_no_river)
attach(CBG_ny_no_river)
library(geosphere)
area_cbg=c()
#par(mfrow=c(4,5))
for (i in 1:1092) {
#points= CBG_ny_no_river$geometry[[i]][[1]][[1]][,1], CBG_ny_no_river$geometry[[i]][[1]][[1]][,2]
coords= CBG_ny_no_river$geometry[[i]][[1]][[1]]
area_cbg[i]=areaPolygon(coords)
}
area_cbg=area_cbg/10^6;
dev <- c();
tot <- 0; #conterà quanti cbg della county sta trovando
settimana <- c('1mon', '2tue', '3wen', '4thu', '5fri','6sat', '7sun');
dev <- rep(0.0, times = 2*n);
group <- c('work day', 'weekend');
days <- rep(group, times = n);
k=1
for (i in seq(1,n)){
j <- match(area[i],CensusBlockGroup);
tot = c(stops_by_day[[i]][seq(1,30,7)], stops_by_day[[i]][seq(2,30,7)],
stops_by_day[[i]][seq(3,30,7)], stops_by_day[[i]][seq(4,30,7)],
stops_by_day[[i]][seq(5,30,7)]);
dev[k] = mean(tot)/area_cbg[i];
k=k+1
tot <- c(stops_by_day[[i]][seq(6,30,7)], stops_by_day[[i]][seq(7,30,7)]);
dev[k] <- mean(tot)/area_cbg[i];
k=k+1
}
x11()
#png(file = "boxplot_work.png")
boxplot( (dev) ~ days, main = "weekend vs work days")
#qua infatti le medie confrontando le densità sembrano differenti
#ma pvalue alto
x11()
#png(file = "barplot_work.png")
par(mfrow=c(1,2), las = 2)
barplot(rep(mean(dev),2), names.arg=levels(days),
las=2, col='grey85', main='Model under H0') # ylim=c(0,max(dev))
barplot(tapply(dev, days, mean), names.arg=levels(days),
las=2, col=c(coldays[4], coldays[6]),main='Model under H1') #, ylim=c(0,max(dev))
#plot fino ai picchi
x11()
par(mfrow=c(1,2))
barplot(rep(mean(dev),7), names.arg=levels(days),ylim=c(0,max(dev)),
las=2, col='grey85', main='Model under H0')
barplot(tapply(dev, days, mean), names.arg=levels(days),ylim=c(0,max(dev)),
las=2, col=c(coldays[4], coldays[6]), main='Model under H1')
dev.off()
Ps <- c(shapiro.test(dev[ days==group[1] ])$p,
shapiro.test(dev[ days==group[2] ])$p)
Ps
# 2) same covariance structure (= same sigma^2)
Var <- c(var(dev[ days==group[1] ]),
var(dev[ days==group[2] ]));
Var #12021732  2350414
x11()
plot(Var, ylim = c(0, max(Var)))
# test of homogeneity of variances
# H0: sigma.1 = sigma.2 = sigma.3 = sigma.4 = sigma.5 = sigma.6
# H1: there exist i,j s.t. sigma.i!=sigma.j
bartlett.test(dev, days)
fit <- aov(dev ~ days)
summary(fit)
remove <- which(dev > 3*10^4)
plot(dev)
abline(h=3*10^4)
par(new=TRUE)
points(remove,dev[remove], col ='red',xlim=c(0,2300))
dev<-dev[-remove]
days<-days[-remove]
plot(dev, col=(factor(days)))
x11()
#png(file = "boxplot_work.png")
boxplot( (dev) ~ days, main = "weekend vs work days")
dev.off()
#qua infatti le medie confrontando le densità sembrano differenti
#ma pvalue alto
x11()
# test of homogeneity of variances
# H0: sigma.1 = sigma.2 = sigma.3 = sigma.4 = sigma.5 = sigma.6
# H1: there exist i,j s.t. sigma.i!=sigma.j
bartlett.test(dev, days)
fit <- aov(dev ~ days)
summary(fit)
library(geosphere)
library(sf)
library(sp)           ## Data management
library(lattice)      ## Data management
library(geoR)         ## Geostatistics
library(gstat)        ## Geostatistics
library(ggplot2)
library(raster)
library(rgdal)
# fra
# load("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/DATASET/Data frame county/New York County.RData") # FRA
# load("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/DATASET/Conversione dal dataset originale ad adesso/Cyber_Capital.RData")
# load("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/DATASET/River_Dataset.RData")
# terri
load("/home/terri/Documenti/UNIVERSITA/STAT APP/progetto/gitcode/Applied-statistics-project/DATASET/Data frame county/New York County.RData") #TERRI
load("/home/terri/Documenti/UNIVERSITA/STAT APP/progetto/gitcode/Applied-statistics-project/DATASET/Conversione dal dataset originale ad adesso/Cyber_Capital.RData")
load("/home/terri/Documenti/UNIVERSITA/STAT APP/progetto/gitcode/Applied-statistics-project/DATASET/River_Dataset.RData")
# order patterns_ny and census_block_ny by CBG of New York County
New_York_County=New_York_County[order(New_York_County$area),]
CBG_ny_index = which(census_blocks_ny$County=="New York County")
CBG_ny = census_blocks_ny[CBG_ny_index,]
# make the two datasets equal
remove=c()
k=1
for (i in 1:1170) {
index=which(New_York_County$area==CBG_ny$CensusBlockGroup[i])
if (length(index)==0) {
remove[k]=i
k=k+1
}
}
CBG_ny=CBG_ny[-remove,]
CBG_ny=CBG_ny[order(CBG_ny$CensusBlockGroup),]
CBG_ny_index=CBG_ny_index[-remove]
# order patterns_ny and census_block_ny by CBG of New York County
New_York_County=New_York_County[order(New_York_County$area),]
CBG_ny_index = which(census_blocks_ny$County=="New York County")
CBG_ny = census_blocks_ny[CBG_ny_index,]
