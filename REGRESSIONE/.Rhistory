CBG_RIVER<-CBG_ny[index_river,]
remove <- c("360610005001")
remove_index = c()
k=1
for (i in 1:dim(CBG_RIVER)[1]) {
if (CBG_RIVER$CensusBlockGroup[i] %in% remove) {
remove_index[k] = i
k=k+1
}
}
CBG_RIVER<-CBG_RIVER[-remove_index,]
# TROVIAMO I CBG DEI FIUMI
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "red")
View(CBG_RIVER)
remove <- c("360610005001", "360610002012", "360610002022", "360610002025")
remove_index = c()
k=1
for (i in 1:dim(CBG_RIVER)[1]) {
if (CBG_RIVER$CensusBlockGroup[i] %in% remove) {
remove_index[k] = i
k=k+1
}
}
CBG_RIVER<-CBG_RIVER[-remove_index,]
# TROVIAMO I CBG DEI FIUMI
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "red")
remove <- c("360610005001", "360610002012", "360610002022", "360610002025","360610002023","360610002023","360610002021")
remove_index = c()
k=1
for (i in 1:dim(CBG_RIVER)[1]) {
if (CBG_RIVER$CensusBlockGroup[i] %in% remove) {
remove_index[k] = i
k=k+1
}
}
CBG_RIVER<-CBG_RIVER[-remove_index,]
# TROVIAMO I CBG DEI FIUMI
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "red")
remove <- c("360610005001", "360610002012", "360610002022", "360610002025","360610002023","360610002021", "360610002024")
remove_index = c()
k=1
for (i in 1:dim(CBG_RIVER)[1]) {
if (CBG_RIVER$CensusBlockGroup[i] %in% remove) {
remove_index[k] = i
k=k+1
}
}
CBG_RIVER<-CBG_RIVER[-remove_index,]
# TROVIAMO I CBG DEI FIUMI
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "red")
remove <- c("360610005001", "360610002012","360610002011", "360610002022", "360610002025","360610002023","360610002021", "360610002024")
remove_index = c()
k=1
for (i in 1:dim(CBG_RIVER)[1]) {
if (CBG_RIVER$CensusBlockGroup[i] %in% remove) {
remove_index[k] = i
k=k+1
}
}
CBG_RIVER<-CBG_RIVER[-remove_index,]
# TROVIAMO I CBG DEI FIUMI
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "red")
remove <- c("360610005001", "360610002012","360610002011", "360610002022", "360610002025","360610002023","360610002021", "360610002024",
"360610006001","360610006002","360610006003","360610006004","360610006005","360610006006")
remove_index = c()
k=1
for (i in 1:dim(CBG_RIVER)[1]) {
if (CBG_RIVER$CensusBlockGroup[i] %in% remove) {
remove_index[k] = i
k=k+1
}
}
CBG_RIVER<-CBG_RIVER[-remove_index,]
# TROVIAMO I CBG DEI FIUMI
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "red")
track_code_river <- c("027500", "025500", "024700", "024100", "023700", "023300", "022900", "022500", "022301", "021900","021100","020500", "019900", "019500",
"019100", "018700", "018300", "017900", "017500", "017100","016700", "016300", "015900", "015500", "015100", "013500", "012900", "011700", "009900", "007900", "007500", "006900", "003700",
"003900", "031703", "031704","031900", "000500", "000900","000700", "001502", "001501", "002500", "000800","000600","000201", "000202", "001001", "001002", "002000", "002400", "004400",
"006000", "006200", "008601", "008602", "023801", "010601","010602","011600", "012400", "013200", "013600", "023802", "015200","017800", "019200", "024200", "021000", "023600", "024302", "031100",
"029900", "029700", "028700", "022302", "016200", "024000")
index_river=c()
k=1
for (i in 1:dim(CBG_ny)[1]) {
if (CBG_ny$TractCode[i] %in% track_code_river && ) {
if (CBG_ny$BlockGroup[i] == "0")
index_river[k] = i
k=k+1
}
}
CBG_RIVER<-CBG_ny[index_river,]
track_code_river <- c("027500", "025500", "024700", "024100", "023700", "023300", "022900", "022500", "022301", "021900","021100","020500", "019900", "019500",
"019100", "018700", "018300", "017900", "017500", "017100","016700", "016300", "015900", "015500", "015100", "013500", "012900", "011700", "009900", "007900", "007500", "006900", "003700",
"003900", "031703", "031704","031900", "000500", "000900","000700", "001502", "001501", "002500", "000800","000600","000201", "000202", "001001", "001002", "002000", "002400", "004400",
"006000", "006200", "008601", "008602", "023801", "010601","010602","011600", "012400", "013200", "013600", "023802", "015200","017800", "019200", "024200", "021000", "023600", "024302", "031100",
"029900", "029700", "028700", "022302", "016200", "024000")
index_river=c()
k=1
for (i in 1:dim(CBG_ny)[1]) {
if (CBG_ny$TractCode[i] %in% track_code_river ) {
if (CBG_ny$BlockGroup[i] == "0") {
index_river[k] = i
k=k+1
}
}
}
CBG_RIVER<-CBG_ny[index_river,]
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "red")
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "blue")
index_river=c()
k=1
for (i in 1:dim(CBG_ny)[1]) {
if (CBG_ny$TractCode[i] %in% track_code_river ) {
if (CBG_ny$BlockGroup[i] == "0") {
index_river[k] = i
k=k+1
}
}
}
CBG_RIVER<-CBG_ny[index_river,]
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "cyan")
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "lightblue")
save (CBG_RIVER, file="River_Dataser.RData")
save (CBG_RIVER, file="River_Dataset.RData")
library(car)
library(geosphere)
library(sf)
# fra
load("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/DATASET/Data frame county/New York County.RData") # FRA
load("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/DATASET/Conversione dal dataset originale ad adesso/Cyber_Capital.RData")
# terri
#load("/home/terri/Documenti/UNIVERSITA/STAT APP/progetto/gitcode/Applied-statistics-project/DATASET/Data frame county/New York County.RData") #TERRI
#load("/home/terri/Documenti/UNIVERSITA/STAT APP/progetto/gitcode/Applied-statistics-project/DATASET/Conversione dal dataset originale ad adesso/Cyber_Capital.RData")
# order patterns_ny and census_block_ny by CBG of New York County
New_York_County=New_York_County[order(New_York_County$area),]
CBG_ny_index = which(census_blocks_ny$County=="New York County")
CBG_ny = census_blocks_ny[CBG_ny_index,]
# make the two datasets equal
remove=c()
k=1
for (i in 1:1170) {
index=which(New_York_County$area==CBG_ny$CensusBlockGroup[i])
if (length(index)==0) {
remove[k]=i
k=k+1
}
}
CBG_ny=CBG_ny[-remove,]
CBG_ny=CBG_ny[order(CBG_ny$CensusBlockGroup),]
CBG_ny_index=CBG_ny_index[-remove]
rm (patterns_ny)
rm (census_blocks_ny)
rm(census_metadata)
# TROVIAMO I CBG DEI FIUMI
track_code_river <- c("027500", "025500", "024700", "024100", "023700", "023300", "022900", "022500", "022301", "021900","021100","020500", "019900", "019500",
"019100", "018700", "018300", "017900", "017500", "017100","016700", "016300", "015900", "015500", "015100", "013500", "012900", "011700", "009900", "007900", "007500", "006900", "003700",
"003900", "031703", "031704","031900", "000500", "000900","000700", "001502", "001501", "002500", "000800","000600","000201", "000202", "001001", "001002", "002000", "002400", "004400",
"006000", "006200", "008601", "008602", "023801", "010601","010602","011600", "012400", "013200", "013600", "023802", "015200","017800", "019200", "024200", "021000", "023600", "024302", "031100",
"029900", "029700", "028700", "022302", "016200", "024000")
index_river=c()
k=1
for (i in 1:dim(CBG_ny)[1]) {
if (CBG_ny$TractCode[i] %in% track_code_river ) {
if (CBG_ny$BlockGroup[i] == "0") {
index_river[k] = i
k=k+1
}
}
}
CBG_RIVER<-CBG_ny[index_river,]
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "lightblue")
save (CBG_RIVER, file="River_Dataset.RData")
load("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/DATASET/River_Dataset.RData")
library(geosphere)
library(sf)
# fra
load("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/DATASET/Data frame county/New York County.RData") # FRA
load("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/DATASET/Conversione dal dataset originale ad adesso/Cyber_Capital.RData")
load("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/DATASET/River_Dataset.RData")
# terri
#load("/home/terri/Documenti/UNIVERSITA/STAT APP/progetto/gitcode/Applied-statistics-project/DATASET/Data frame county/New York County.RData") #TERRI
#load("/home/terri/Documenti/UNIVERSITA/STAT APP/progetto/gitcode/Applied-statistics-project/DATASET/Conversione dal dataset originale ad adesso/Cyber_Capital.RData")
# order patterns_ny and census_block_ny by CBG of New York County
New_York_County=New_York_County[order(New_York_County$area),]
CBG_ny_index = which(census_blocks_ny$County=="New York County")
CBG_ny = census_blocks_ny[CBG_ny_index,]
# make the two datasets equal
remove=c()
k=1
for (i in 1:1170) {
index=which(New_York_County$area==CBG_ny$CensusBlockGroup[i])
if (length(index)==0) {
remove[k]=i
k=k+1
}
}
CBG_ny=CBG_ny[-remove,]
CBG_ny=CBG_ny[order(CBG_ny$CensusBlockGroup),]
CBG_ny_index=CBG_ny_index[-remove]
rm (patterns_ny)
rm (census_blocks_ny)
rm(census_metadata)
data(CBG_ny$geometry)
centroids <- getSpPPolygonsLabptSlots(CBG_ny$geometry)
centroids <- st_centroid(CBG_ny$geometry)
centroids <- st_centroid(CBG_ny$geometry, of_largest_polygon = FALSE)
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "lightblue")
plot(centroids, xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "lightblue")
plot(centroids, xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ", "*")
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "lightblue")
plot(centroids, xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ", pch=2)
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "lightblue")
plot(centroids, xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ", pch='.')
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "lightblue")
par(new=T)
plot(centroids, xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ", pch='.')
centroids <- st_centroid(CBG_ny$geometry, of_largest_polygon = TRUE)
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "lightblue")
par(new=T)
plot(centroids, xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ", pch='.')
centroids <- st_centroid(CBG_ny$geometry, of_largest_polygon = FALSE)
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "lightblue")
par(new=T)
plot(centroids, xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ", pch='.')
#------------------------------------------------------------
# Spatial Correlation
svgm <- variogram(median_dwell ~ 1, CBG_ny) #response variable ~ 1 #stationary dataset
library(geoR)         ## Geostatistics
library(gstat)        ## Geostatistics
#------------------------------------------------------------
# Spatial Correlation
svgm <- variogram(median_dwell ~ 1, CBG_ny) #response variable ~ 1 #stationary dataset
# Zs = ms + delta_s
# sum_l a_l*f_l(s) + delta_s amd with 1 we say "take only f_0(s)"
plot(svgm, main = 'Sample Variogram',pch=19)
svgm <- variogram(CBG_ny$median_dwell ~ 1, CBG_ny) #response variable ~ 1 #stationary dataset
# Zs = ms + delta_s
# sum_l a_l*f_l(s) + delta_s amd with 1 we say "take only f_0(s)"
plot(svgm, main = 'Sample Variogram',pch=19)
plot(variogram(CBG_ny$median_dwell ~ 1, CBG_ny),pch=19)
svgm <- variogram(New_York_County$median_dwell ~ 1, CBG_ny) #response variable ~ 1 #stationary dataset
# Zs = ms + delta_s
# sum_l a_l*f_l(s) + delta_s amd with 1 we say "take only f_0(s)"
plot(svgm, main = 'Sample Variogram',pch=19)
plot(variogram(New_York_County$median_dwell ~ 1, CBG_ny),pch=19)
plot(variogram(New_York_County$median_dwell ~ 1, CBG_nyalpha = c(0, 45, 90, 135)),pch=19)
plot(variogram(New_York_County$median_dwell ~ 1, CBG_ny,alpha = c(0, 45, 90, 135)),pch=19)
vgm()
v <- variogram(New_York_County$median_dwell ~ 1, CBG_ny)
View(v)
plot(v,pch=19)
fit.variogram(v, vgm(1, "Sph", 800, 1))
help(fit.variogram())
help("fit.variogram()")
help("fit.variogram")
fit.variogram(v, vgm(1, "Sph"))
fit.variogram(v, vgm("Sph", 800, 1))
fit.variogram(v, vgm("Sph"))
v <- variogram(New_York_County$median_dwell ~ 1, CBG_ny)
plot(v,pch=19)
v.fi<-fit.variogram(v, vgm("Sph"))
plot(v, v.fit, pch = 19)
v.fit<-fit.variogram(v, vgm("Sph"))
plot(v, v.fit, pch = 19)
v.fit<-fit.variogram(v, vgm(1, "Sph", 800, 1))
v.fit<-fit.variogram(v, vgm(1, "Sph", 10, 1))
v.fit<-fit.variogram(v, vgm(1, "Sph", 3000, 1))
v.fit<-fit.variogram(v, vgm(1, "Sph", 4000, 1))
# Fit
v <- variogram(New_York_County$median_dwell ~ 1, centroids)
help(variogram)
#------------------------------------------------------------
# Spatial Correlation
svgm <- variogram(New_York_County$median_dwell ~ 1, CBG_ny, locations = centroids) #response variable ~ 1 #stationary dataset
svgm <- variogram(New_York_County$median_dwell ~ 1, CBG_ny, locations = centroids) #response variable ~ 1 #stationary dataset
# Zs = ms + delta_s
# sum_l a_l*f_l(s) + delta_s amd with 1 we say "take only f_0(s)"
plot(svgm, main = 'Sample Variogram',pch=19)
plot(variogram(New_York_County$median_dwell ~ 1, CBG_ny,alpha = c(0, 45, 90, 135),locations = centroids),pch=19)
# Fit
v <- variogram(New_York_County$median_dwell ~ 1, CBG_ny,locations = centroids)
plot(v,pch=19)
v.fit<-fit.variogram(v, vgm(1, "Sph", 800, 1))
plot(v, v.fit, pch = 19)
data(meuse)
library(sp)           ## Data management
library(lattice)      ## Data management
library(geoR)         ## Geostatistics
library(gstat)        ## Geostatistics
data(meuse)
head(meuse)
help(meuse)
## Define the sample coordinates
coordinates(meuse) <- c('x','y') #SET COORDINATES
# bubble plot(obj,zcol,...)
# key.space=location of the key
bubble(meuse,'zinc',do.log=TRUE,key.space='bottom')
data <- data.frame(CBG_ny,median_dwell,centroids)
bubble(data,'median_dwell',do.log=TRUE,key.space='bottom')
data <- SpatialPointsDataFrame(CBG_ny,median_dwell,centroids)
data.frame
data <- data.frame(CBG_ny,median_dwell,centroids)
spatial_data <- SpatialPixelsDataFrame(median_dwell,centroids)
spatial_data <- SpatialPixelsDataFrame(median_dwell,coordinates = centroids)
data.coordinates = centroids
View(data)
spatial_data <- SpatialPixelsDataFrame(data)
spatial_data <- SpatialPointsDataFrame(data)
data <- data.frame(CBG_ny,median_dwell,centroids)
coordinates(data) = centroids
spatial_data <- (data)
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "lightblue")
data <- data.frame(CBG_ny,median_dwell,centroids)
coordinates(data$geometry.1) = centroids
data <- data.frame(CBG_ny,median_dwell,centroids)
View(data)
data <- data.frame(CBG_ny,median_dwell,centroids = centroids)
View(data)
data <- data.frame(CBG_ny,median_dwell,"centroids" = centroids)
View(data)
data <- data.frame(CBG_ny,median_dwell)
View(data)
View(centroids)
centroids[1]
centroids[1]$POINT
data <- data.frame(CBG_ny,median_dwell, centroids)
coordinates(data$geometry.1) = centroids
coordinates(data$geometry.1)
st_geometry(CBG_ny$geometry)
#------------------------------------------------------------
# Save centroid coordinates of each CBG
CBG_ny$geometry<-st_geometry(CBG_ny$geometry)
View(CBG_ny)
class(CBG_ny)
st_transform(CBG_ny$geometry)
data <- as(CBG_ny, "Spatial")
View(data)
spatial_data <- data.frame(CBG_ny,median_dwell, centroids)
spatial_data <- data.frame(CBG_ny,centroids,median_dwell)
spatial_data <- data.frame(CBG_ny,centroids,median_dwell)
spatial_data <- as(spatial_data, "Spatial")
spatial_data <- c(CBG_ny,centroids,median_dwell)
spatial_data <- as(spatial_data, "Spatial")
spatial_data <- as(CBG_ny, "Spatial")
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "lightblue")
View(CBG_ny)
spatial_data <- as(CBG_ny, "Spatial")
spatial_data <- data.frame(spatial_data, median_dwell,centroids)
View(spatial_data)
View(data)
View(spatial_data)
View(CBG_ny)
CBG_ny$geometry[1]
centroids <- st_centroid(CBG_ny$geometry, of_largest_polygon = FALSE)
New_York_County=New_York_County[order(New_York_County$area),]
CBG_ny_index = which(census_blocks_ny$County=="New York County")
CBG_ny = census_blocks_ny[CBG_ny_index,]
# make the two datasets equal
remove=c()
k=1
for (i in 1:1170) {
index=which(New_York_County$area==CBG_ny$CensusBlockGroup[i])
if (length(index)==0) {
remove[k]=i
k=k+1
}
}
CBG_ny=CBG_ny[-remove,]
CBG_ny=CBG_ny[order(CBG_ny$CensusBlockGroup),]
CBG_ny_index=CBG_ny_index[-remove]
rm (patterns_ny)
rm (census_blocks_ny)
rm(census_metadata)
#------------------------------------------------------------
# Save centroid coordinates of each CBG
centroids <- st_centroid(CBG_ny$geometry, of_largest_polygon = FALSE)
library(geosphere)
library(sf)
# fra
load("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/DATASET/Data frame county/New York County.RData") # FRA
load("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/DATASET/Conversione dal dataset originale ad adesso/Cyber_Capital.RData")
load("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/DATASET/River_Dataset.RData")
# terri
#load("/home/terri/Documenti/UNIVERSITA/STAT APP/progetto/gitcode/Applied-statistics-project/DATASET/Data frame county/New York County.RData") #TERRI
#load("/home/terri/Documenti/UNIVERSITA/STAT APP/progetto/gitcode/Applied-statistics-project/DATASET/Conversione dal dataset originale ad adesso/Cyber_Capital.RData")
# order patterns_ny and census_block_ny by CBG of New York County
New_York_County=New_York_County[order(New_York_County$area),]
CBG_ny_index = which(census_blocks_ny$County=="New York County")
CBG_ny = census_blocks_ny[CBG_ny_index,]
# make the two datasets equal
remove=c()
k=1
for (i in 1:1170) {
index=which(New_York_County$area==CBG_ny$CensusBlockGroup[i])
if (length(index)==0) {
remove[k]=i
k=k+1
}
}
CBG_ny=CBG_ny[-remove,]
CBG_ny=CBG_ny[order(CBG_ny$CensusBlockGroup),]
CBG_ny_index=CBG_ny_index[-remove]
rm (patterns_ny)
rm (census_blocks_ny)
rm(census_metadata)
#------------------------------------------------------------
# Save centroid coordinates of each CBG
centroids <- st_centroid(CBG_ny$geometry, of_largest_polygon = FALSE)
x11()
plot(st_geometry(CBG_ny$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ")
par(new=T)
plot(st_geometry(CBG_RIVER$geometry), xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ",col = "lightblue")
par(new=T)
plot(centroids, xlim = c(-74.1,-73.8), ylim = c(40.68,40.88), xlab = " ", ylab = " ", pch='.')
centroids[1]
centroids
data_spatial <-data.frame(CBG_ny, New_York_County$median_dwell, centroids)
View(data_spatial)
is(centroids)
coordinates(data_spatial)
is(data_spatial)
coordinates(data_spatial) <- data_spatial$geometry.1
as.numeric(unlist(centroids))
coordinates.x <- seq(1,length(coordinates),by=2)
coordinates.x <- seq(1,dim(coordinates),by=2)
dim(coordinates())
dim(coordinates)
coordinates()
coordinates
coord <- as.numeric(unlist(centroids))
coord.x <- seq(1,dim(coord),by=2)
coord
length(coord)
coord.x <- seq(1,length(coord),by=2)
coord <- as.numeric(unlist(centroids))
coord.x <- coord[seq(1,length(coord),by=2)]
coord.y <- coord[seq(2,length(coord),by=2)]
coord.x
data_spatial <-data.frame(CBG_ny, New_York_County$median_dwell, coord.x, coord.y)
coordinates(data_spatial) <- data_spatial$geometry.1
head(data_spatial)
coordinates(data_spatial) <- c('coord.x','coord.y')
is(data_spatial)
bubble(data_spatial, 'median_dwell', do.log=TRUE,key.space='bottom')
bubble(data_spatial, 'New_York_County.median_dwell', do.log=TRUE,key.space='bottom')
x11()
bubble(data_spatial, 'New_York_County.median_dwell', do.log=TRUE,key.space='bottom')
plot(data_spatial$geometry["median_dwell"])
plot(data_spatial$geometry["median_dwell"])
plot(st_geometry(data_spatial$geometry["median_dwell"]))
plot(st_geometry(data_spatial["median_dwell"]))
spplot(data_spatial)
