lines(media-pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=3)
abline(v=seq(1,30, by=7))
title("FPCs")
x11()
media <- mean.fd(data_W.fd.1)
par(mfrow=c(1,2))
plot(media,lwd=2,ylim=c(-20,300),ylab='Stops by day',main='FPC1')
lines(media+pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=2)
lines(media-pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=3)
abline(v=seq(1,30, by=7))
title("FPC1")
plot(media,lwd=2,ylim=c(0,170),ylab='Stops by day',main='FPC2')
lines(media+pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=2)
lines(media-pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=3)
abline(v=seq(1,30, by=7))
title("FPC2")
setwd("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/ANALISI FUNZIONALE STOPS/Plot")
setwd("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/ANALISI FUNZIONALE STOPS")
x11()
media <- mean.fd(data_W.fd.1)
par(mfrow=c(1,2))
plot(media,lwd=2,ylim=c(-20,300),ylab='Stops by day',main='FPC1')
lines(media+pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=3)
lines(media-pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=2)
abline(v=seq(1,30, by=7))
title("FPC1")
plot(media,lwd=2,ylim=c(0,170),ylab='Stops by day',main='FPC2')
lines(media+pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=3)
lines(media-pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=2)
abline(v=seq(1,30, by=7))
title("FPC2")
x11()
plot(pca_W.1$scores[,1],pca_W.1$scores[,2],type="n",xlab="Scores FPC1",
ylab="Scores FPC2")
text(pca_W.1$scores[,1],pca_W.1$scores[,2], cex=1)
centroids_NY <- st_centroid(CBG_ny_no_river$geometry, of_largest_polygon = FALSE)
coord_NY <- as.numeric(unlist(centroids_NY))
coord.x_long <- coord_NY[seq(1,length(coord_NY),by=2)]
coord.y_lat <- coord_NY[seq(2,length(coord_NY),by=2)]
x11()
plot(coord.x_long,coord.y_lat,xlab="longitude",ylab="latitude",lwd=2)
outliers<-c(346,358) #non da togliere, sono quelli che hanno un comportamento molto netto
points(coord.x_long[outliers],coord.y_lat[outliers], cex=2, col='red')
centroids_NY <- st_centroid(CBG_ny_no_river$geometry, of_largest_polygon = FALSE)
x11()
plot(pca_W.1$scores[,1],pca_W.1$scores[,2],type="n",xlab="Scores FPC1",
ylab="Scores FPC2")
text(pca_W.1$scores[,1],pca_W.1$scores[,2], cex=1)
x11()
media <- mean.fd(data_W.fd.1)
plot(media,lwd=2,ylim=c(-20,300),ylab='Stops by day',main='FPC1')
par(new=T)
plot(New_York_County_no_river$stops_by_day[346],lwd=2,ylim=c(-20,300),ylab='Stops by day')
x11()
media <- mean.fd(data_W.fd.1)
plot(media,lwd=2,ylim=c(-20,300),ylab='Stops by day',main='FPC1')
par(new=T)
plot(1:30,New_York_County_no_river$stops_by_day[346],lwd=2,ylim=c(-20,300),ylab='Stops by day')
New_York_County_no_river$stops_by_day[346]
New_York_County_no_river$stops_by_day[[346]]
plot(1:30,New_York_County_no_river$stops_by_day[[346]],lwd=2,ylim=c(-20,300),ylab='Stops by day')
x11()
media <- mean.fd(data_W.fd.1)
plot(media,lwd=2,ylim=c(-20,300),ylab='Stops by day',main='FPC1')
par(new=T)
plot(1:30,New_York_County_no_river$stops_by_day[[346]],lwd=2,ylim=c(-20,300),ylab='Stops by day')
x11()
media <- mean.fd(data_W.fd.1)
plot(media,lwd=2,ylim=c(-20,300),ylab='Stops by day',main='FPC1')
par(new=T)
plot(1:30,New_York_County_no_river$stops_by_day[[346]],lwd=2,ylim=c(-20,300),ylab='Stops by day', xlab = "")
x11()
media <- mean.fd(data_W.fd.1)
plot(media,lwd=2,ylim=c(50,300),ylab='Stops by day',main='FPC1')
par(new=T)
plot(1:30,New_York_County_no_river$stops_by_day[[346]],lwd=2,ylim=c(50,300),ylab='Stops by day', xlab = "")
x11()
media <- mean.fd(data_W.fd.1)
plot(media,lwd=2,ylim=c(50,1300),ylab='Stops by day',main='FPC1')
par(new=T)
plot(1:30,New_York_County_no_river$stops_by_day[[346]],lwd=2,ylim=c(50,1300),ylab='Stops by day', xlab = "")
# fra
load("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/DATASET/Data frame county/New York County.RData") # FRA
load("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/DATASET/NYC_no_river.RData")
load("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/DATASET/CBG_NY_no_river.RData")
attach(New_York_County_no_river)
stops<-matrix(nrow = 1092, ncol=30)
for (i in 1:dim(New_York_County_no_river)[1]) {
stops[i,]<-stops_by_day[[i]]
}
detach(New_York_County_no_river)
stops<-t(stops)
colnames(stops)<-New_York_County_no_river$area
x11()
matplot(stops,type='l' , main = "Stops by day")
#B-SPLINES
# Set parameters
nbasis <- 13
m <- 3+1        # spline order
# spline degree  #DEGREE = ORDER - 1
basis <- create.bspline.basis(rangeval=c(1,30), nbasis=nbasis, norder=m)
time=1:30
data_W.fd.1 <- Data2fd(y = stops,argvals = time,basisobj = basis) #SMOOTHING
x11()
plot.fd(data_W.fd.1, main ="Smoothing stops by day")
arm=5 #numero armoniche
plot.fd(data_W.fd.1)
pca_W.1 <- pca.fd(data_W.fd.1,nharm=arm,centerfns=TRUE) #build a functional object before run it -> smoothing preprocessing
# scree plot
# pca.fd computes all the 365 eigenvalues, but only the first are non null
plot(pca_W.1$values[1:5],xlab='j',ylab='Eigenvalues')
plot(cumsum(pca_W.1$values)[1:5]/sum(pca_W.1$values),xlab='j',ylab='CPV',ylim=c(0.8,1))
layout(cbind(1,2,3))
plot(pca_W.1$harmonics[1,],col=1,ylab='FPC1')
abline(h=0,lty=2)
plot(pca_W.1$harmonics[2,],col=2,ylab='FPC2')
plot(pca_W.1$harmonics[3,],col=2,ylab='FPC3')
par(mfrow=c(1,3))
plot.pca.fd(pca_W.1, nx=100, pointplot=TRUE, harm=c(1,2,3), expand=0, cycle=FALSE)
# scatter plot of the scores
par(mfrow=c(1,2))
plot(pca_W.1$scores[,1],pca_W.1$scores[,2],xlab="Scores FPC1",ylab="Scores FPC2",lwd=2)
plot(pca_W.1$scores[,1],pca_W.1$scores[,2],type="n",xlab="Scores FPC1",
ylab="Scores FPC2")
text(pca_W.1$scores[,1],pca_W.1$scores[,2], cex=1)
x11()
plot(pca_W.1$scores[,1],pca_W.1$scores[,2],type="n",xlab="Scores FPC1",
ylab="Scores FPC2", main="Scatterplot")
text(pca_W.1$scores[,1],pca_W.1$scores[,2], cex=1)
CBG_ny_no_river=CBG_ny_no_river[order(CBG_ny_no_river$CensusBlockGroup),]
# outliers
out=c(213,247)
cbg_out=New_York_County_no_river[out,1]
cbg_out
x11()
matplot(stops,type='l', main= "Stops by day - outliers")
lines(stops[,213],lwd=4, col=2)
lines(stops[,247],lwd=4, col=1)
ggplot() +
geom_sf(data = CBG_ny_no_river$geometry)+
geom_sf(data = CBG_ny_no_river$geometry[c(213,247)], fill="red")+
geom_sf(data = CBG_RIVER$geometry, fill="lightblue")
library(ggplot2)
ggplot() +
geom_sf(data = CBG_ny_no_river$geometry)+
geom_sf(data = CBG_ny_no_river$geometry[c(213,247)], fill="red")+
geom_sf(data = CBG_RIVER$geometry, fill="lightblue")
ggplot() +
geom_sf(data = CBG_ny_no_river$geometry)+
geom_sf(data = CBG_ny_no_river$geometry[213], fill="red")+
geom_sf(data = CBG_ny_no_river$geometry[247], fill="red")+
geom_sf(data = CBG_RIVER$geometry, fill="lightblue")
library(sp)
library(sf)
ggplot() +
geom_sf(data = CBG_ny_no_river$geometry)+
geom_sf(data = CBG_ny_no_river$geometry[213], fill="red")+
geom_sf(data = CBG_ny_no_river$geometry[247], fill="red")+
geom_sf(data = CBG_RIVER$geometry, fill="lightblue")
CBG_ny_no_river$geometry[213]
ggplot() +
geom_sf(data = CBG_ny_no_river$geometry, fill="black")+
geom_sf(data = CBG_ny_no_river$geometry[[213]], fill="red")+
geom_sf(data = CBG_ny_no_river$geometry[[247]], fill="red")+
geom_sf(data = CBG_RIVER$geometry, fill="lightblue")
`rlang::last_error()`
rlang::last_error()
ggplot() +
geom_sf(data = CBG_ny_no_river$geometry, aes(fill="black"))+
geom_sf(data = CBG_ny_no_river$geometry[[213]], aes(fill="red"))+
geom_sf(data = CBG_ny_no_river$geometry[[247]], aes(fill="red"))+
geom_sf(data = CBG_RIVER$geometry, fill="lightblue")
# fra
load("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/DATASET/NYC_no_river.RData")
load("C:/Users/franc/Desktop/PoliMI/Anno Accademico 2020-2021/Applied Statistics/Progetto/Applied-statistics-project/DATASET/CBG_NY_no_river.RData")
New_York_County_no_river= New_York_County_no_river[order( New_York_County_no_river$area),]
CBG_ny_no_river<-CBG_ny_no_river[order( CBG_ny_no_river$CensusBlockGroup),]
attach( New_York_County_no_river)
stops<-matrix(nrow = 1092, ncol=30*24)
for (i in 1:dim( New_York_County_no_river)[1]) {
stops[i,]<-stops_by_each_hour[[i]]
}
detach( New_York_County_no_river)
stops<-stops[,505:672]
stops<-t(stops)
colnames(stops)<- New_York_County_no_river$area
x11()
matplot(stops,type='l', main = "22/06 - 28/06")
nbasis <- 28 # number of basis
# Create the basis
#FOURIER
basis <- create.fourier.basis(rangeval=c(1,168),nbasis=nbasis) # creates a fourier basis
time=1:168
data_W.fd.1 <- Data2fd(y = stops,argvals = time,basisobj = basis) #SMOOTHING
x11()
library(fda)
nbasis <- 28 # number of basis
# Create the basis
#FOURIER
basis <- create.fourier.basis(rangeval=c(1,168),nbasis=nbasis) # creates a fourier basis
time=1:168
data_W.fd.1 <- Data2fd(y = stops,argvals = time,basisobj = basis) #SMOOTHING
x11()
plot.fd(data_W.fd.1)
arm=5 #numero armoniche
plot.fd(data_W.fd.1)
pca_W.1 <- pca.fd(data_W.fd.1,nharm=arm,centerfns=TRUE) #build a functional object before run it -> smoothing preprocessing
# scree plot
# pca.fd computes all the 365 eigenvalues, but only the first are non null
plot(pca_W.1$values[1:5],xlab='j',ylab='Eigenvalues')
plot(cumsum(pca_W.1$values)[1:5]/sum(pca_W.1$values),xlab='j',ylab='CPV',ylim=c(0.8,1))
layout(cbind(1,2,3))
plot(pca_W.1$harmonics[1,],col=1,ylab='FPC1')
abline(h=0,lty=2)
plot(pca_W.1$harmonics[2,],col=2,ylab='FPC2')
plot(pca_W.1$harmonics[3,],col=2,ylab='FPC3')
par(mfrow=c(1,3))
plot.pca.fd(pca_W.1, nx=100, pointplot=TRUE, harm=c(1,2,3), expand=0, cycle=FALSE)
x11()
arm=5 #numero armoniche
plot.fd(data_W.fd.1)
pca_W.1 <- pca.fd(data_W.fd.1,nharm=arm,centerfns=TRUE) #build a functional object before run it -> smoothing preprocessing
# scree plot
# pca.fd computes all the 365 eigenvalues, but only the first are non null
plot(pca_W.1$values[1:5],xlab='j',ylab='Eigenvalues')
plot(cumsum(pca_W.1$values)[1:5]/sum(pca_W.1$values),xlab='j',ylab='CPV',ylim=c(0.8,1))
layout(cbind(1,2,3))
plot(pca_W.1$harmonics[1,],col=1,ylab='FPC1')
abline(h=0,lty=2)
plot(pca_W.1$harmonics[2,],col=2,ylab='FPC2')
plot(pca_W.1$harmonics[3,],col=2,ylab='FPC3')
par(mfrow=c(1,3))
plot.pca.fd(pca_W.1, nx=100, pointplot=TRUE, harm=c(1,2,3), expand=0, cycle=FALSE)
x11()
par(mfrow=c(1,2))
media <- mean.fd(data_W.fd.1)
plot(media,lwd=2,ylim=c(-15,33),ylab='Stops by each hour',main='FPC1')
lines(media+pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=2)
lines(media-pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=3)
abline(v=seq(1,168, by=24), lty=2)
title('FPC1')
plot(media,lwd=2,ylim=c(-2,20),lab='Stops by each hour',main='FPC2')
lines(media+pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=2)
lines(media-pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=3)
abline(v=seq(1,168, by=24), lty=2)
title('FPC2')
# scatter plot of the scores
par(mfrow=c(1,2))
plot(pca_W.1$scores[,1],pca_W.1$scores[,2],xlab="Scores FPC1",ylab="Scores FPC2",lwd=2)
plot(pca_W.1$scores[,1],pca_W.1$scores[,2],type="n",xlab="Scores FPC1",
ylab="Scores FPC2")
text(pca_W.1$scores[,1],pca_W.1$scores[,2], labels=New_York_County_no_river$area, cex=1)
x11()
plot(pca_W.1$scores[,1],pca_W.1$scores[,2],type="n",xlab="Scores FPC1",
ylab="Scores FPC2")
text(pca_W.1$scores[,1],pca_W.1$scores[,2], cex=1)
# togliamo questi outliers
stops<-stops[,-out]
x11()
matplot(stops,type='l',main = "22/06 - 28/06")
lines(stops[,347],lwd=4, col=1)
# outliers
out=c(92,532)
cbg_out=New_York_County_no_river[out,1]
# togliamo questi outliers
stops<-stops[,-out]
x11()
matplot(stops,type='l',main = "22/06 - 28/06")
lines(stops[,347],lwd=4, col=1)
x11()
matplot(stops,type='l',main = "22/06 - 28/06")
lines(stops[,209],lwd=4, col=1)
x11()
matplot(stops,type='l',main = "22/06 - 28/06")
lines(stops[,359],lwd=4, col=1)
max(stops)
which.max(stops)
dim(stops)
stops[35,17]
stops[5,447]
abscissa<-1:168
Xobs0<-stops
nbasis <- 50 # number of basis
# Create the basis
#FOURIER
basis <- create.fourier.basis(rangeval=c(1,168),nbasis=nbasis) # creates a fourier basis
time=1:168
data_W.fd.1 <- Data2fd(y = stops,argvals = time,basisobj = basis) #SMOOTHING
x11()
plot.fd(data_W.fd.1)
x11()
matplot(stops,type='l',main = "22/06 - 28/06")
nbasis <- 20 # number of basis
# Create the basis
#FOURIER
basis <- create.fourier.basis(rangeval=c(1,168),nbasis=nbasis) # creates a fourier basis
time=1:168
data_W.fd.1 <- Data2fd(y = stops,argvals = time,basisobj = basis) #SMOOTHING
x11()
plot.fd(data_W.fd.1)
nbasis <- 100 # number of basis
# Create the basis
#FOURIER
basis <- create.fourier.basis(rangeval=c(1,168),nbasis=nbasis) # creates a fourier basis
time=1:168
data_W.fd.1 <- Data2fd(y = stops,argvals = time,basisobj = basis) #SMOOTHING
x11()
plot.fd(data_W.fd.1)
nbasis <- 80 # number of basis
# Create the basis
#FOURIER
basis <- create.fourier.basis(rangeval=c(1,168),nbasis=nbasis) # creates a fourier basis
time=1:168
data_W.fd.1 <- Data2fd(y = stops,argvals = time,basisobj = basis) #SMOOTHING
x11()
plot.fd(data_W.fd.1)
x11()
media <- mean.fd(data_W.fd.1)
plot(media,lwd=2,ylim=c(-25,20),ylab='temperature',main='FPC1')
lines(media+pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=3)
lines(media-pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=2)
abline(v=seq(1,168, by=24), lty=2)
title("FPC1")
plot(media,lwd=2,ylim=c(-20,20),ylab='temperature',main='FPC2')
lines(media+pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=3)
lines(media-pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=2)
abline(v=seq(1,168, by=24), lty=2)
title("FPC2")
x11()
media <- mean.fd(data_W.fd.1)
par(mfrow=c(1,2))
plot(media,lwd=2,ylim=c(-25,20),ylab='temperature',main='FPC1')
lines(media+pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=3)
lines(media-pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=2)
abline(v=seq(1,168, by=24), lty=2)
title("FPC1")
plot(media,lwd=2,ylim=c(-20,20),ylab='temperature',main='FPC2')
lines(media+pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=3)
lines(media-pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=2)
abline(v=seq(1,168, by=24), lty=2)
title("FPC2")
# temperate climate or not
x11()
media <- mean.fd(data_W.fd.1)
par(mfrow=c(1,2))
plot(media,lwd=2,ylim=c(-25,20),ylab='temperature',main='FPC1')
lines(media+pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=3)
lines(media-pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=2)
abline(v=seq(1,168, by=24), lty=2)
title("FPC1")
plot(media,lwd=2,ylim=c(-2,20),ylab='temperature',main='FPC2')
lines(media+pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=3)
lines(media-pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=2)
abline(v=seq(1,168, by=24), lty=2)
title("FPC2")
x11()
media <- mean.fd(data_W.fd.1)
par(mfrow=c(1,2))
plot(media,lwd=2,ylim=c(-25,30),ylab='temperature',main='FPC1')
lines(media+pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=3)
lines(media-pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=2)
abline(v=seq(1,168, by=24), lty=2)
title("FPC1")
plot(media,lwd=2,ylim=c(-2,17),ylab='temperature',main='FPC2')
lines(media+pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=3)
lines(media-pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=2)
abline(v=seq(1,168, by=24), lty=2)
title("FPC2")
# temperate climate or not
x11()
media <- mean.fd(data_W.fd.1)
par(mfrow=c(1,2))
plot(media,lwd=2,ylim=c(-25,31),ylab='temperature',main='FPC1')
lines(media+pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=3)
lines(media-pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=2)
abline(v=seq(1,168, by=24), lty=2)
title("FPC1")
plot(media,lwd=2,ylim=c(-2,17),ylab='temperature',main='FPC2')
lines(media+pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=3)
lines(media-pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=2)
abline(v=seq(1,168, by=24), lty=2)
title("FPC2")
x11()
media <- mean.fd(data_W.fd.1)
par(mfrow=c(1,2))
plot(media,lwd=2,ylim=c(-25,31),ylab='Stops by each our ~ 22/06 - 28/06',main='FPC1')
lines(media+pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=3)
lines(media-pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=2)
abline(v=seq(1,168, by=24), lty=2)
title("FPC1")
plot(media,lwd=2,ylim=c(-2,17),ylab='Stops by each our ~ 22/06 - 28/06',main='FPC2')
lines(media+pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=3)
lines(media-pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=2)
abline(v=seq(1,168, by=24), lty=2)
title("FPC2")
# temperate climate or not
x11()
media <- mean.fd(data_W.fd.1)
par(mfrow=c(2,1))
plot(media,lwd=2,ylim=c(-25,31),ylab='Stops by each our ~ 22/06 - 28/06',main='FPC1')
lines(media+pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=3)
lines(media-pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=2)
abline(v=seq(1,168, by=24), lty=2)
title("FPC1")
plot(media,lwd=2,ylim=c(-2,17),ylab='Stops by each our ~ 22/06 - 28/06',main='FPC2')
lines(media+pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=3)
lines(media-pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=2)
abline(v=seq(1,168, by=24), lty=2)
title("FPC2")
# temperate climate or not
x11()
media <- mean.fd(data_W.fd.1)
par(mfrow=c(2,1))
plot(media,lwd=2,ylim=c(-25,31),ylab='Stops by each our ~ 22/06 - 28/06',main='FPC1')
lines(media+pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=3)
lines(media-pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=2)
abline(v=seq(1,168, by=24), lty=2)
abline(v=seq(1,168, by=6), lty=3)
title("FPC1")
plot(media,lwd=2,ylim=c(-2,17),ylab='Stops by each our ~ 22/06 - 28/06',main='FPC2')
lines(media+pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=3)
lines(media-pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=2)
abline(v=seq(1,168, by=24), lty=2)
abline(v=seq(1,168, by=6), lty=3)
title("FPC2")
abline(v=seq(1,168, by=24), lty=2, lwt=4)
abline(v=seq(1,168, by=24), lty=2, lwd=4)
x11()
media <- mean.fd(data_W.fd.1)
par(mfrow=c(2,1))
plot(media,lwd=2,ylim=c(-25,31),ylab='Stops by each our ~ 22/06 - 28/06',main='FPC1')
lines(media+pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=3)
lines(media-pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=2)
abline(v=seq(1,168, by=24), lty=2, lwd=4)
abline(v=seq(1,168, by=6), lty=3)
title("FPC1")
plot(media,lwd=2,ylim=c(-2,17),ylab='Stops by each our ~ 22/06 - 28/06',main='FPC2')
lines(media+pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=3)
lines(media-pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=2)
abline(v=seq(1,168, by=24), lty=2, lwd=4)
abline(v=seq(1,168, by=6), lty=3)
title("FPC2")
x11()
media <- mean.fd(data_W.fd.1)
par(mfrow=c(2,1))
plot(media,lwd=2,ylim=c(-25,31),ylab='Stops by each our ~ 22/06 - 28/06',main='FPC1')
lines(media+pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=3)
lines(media-pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=2)
abline(v=seq(1,168, by=24), lty=2, lwd=3)
abline(v=seq(1,168, by=6), lty=3)
title("FPC1")
plot(media,lwd=2,ylim=c(-2,17),ylab='Stops by each our ~ 22/06 - 28/06',main='FPC2')
lines(media+pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=3)
lines(media-pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=2)
abline(v=seq(1,168, by=24), lty=2, lwd=3)
abline(v=seq(1,168, by=6), lty=3)
title("FPC2")
x11()
plot(pca_W.1$scores[,1],pca_W.1$scores[,2],type="n",xlab="Scores FPC1",
ylab="Scores FPC2")
text(pca_W.1$scores[,1],pca_W.1$scores[,2], cex=1)
x11()
plot(pca_W.1$scores[,1],pca_W.1$scores[,2],type="n",xlab="Scores FPC1",
ylab="Scores FPC2")
text(pca_W.1$scores[,1],pca_W.1$scores[,2], cex=1)
# Create the basis
#FOURIER
basis <- create.fourier.basis(rangeval=c(1,168),nbasis=nbasis) # creates a fourier basis
time=1:168
data_W.fd.1 <- Data2fd(y = stops,argvals = time,basisobj = basis) #SMOOTHING
x11()
plot.fd(data_W.fd.1)
# FPCA
arm=5 #numero armoniche
plot.fd(data_W.fd.1)
pca_W.1 <- pca.fd(data_W.fd.1,nharm=arm,centerfns=TRUE) #build a functional object before run it -> smoothing preprocessing
# scree plot
# pca.fd computes all the 365 eigenvalues, but only the first are non null
plot(pca_W.1$values[1:5],xlab='j',ylab='Eigenvalues')
plot(cumsum(pca_W.1$values)[1:5]/sum(pca_W.1$values),xlab='j',ylab='CPV',ylim=c(0.8,1))
layout(cbind(1,2,3))
plot(pca_W.1$harmonics[1,],col=1,ylab='FPC1')
abline(h=0,lty=2)
plot(pca_W.1$harmonics[2,],col=2,ylab='FPC2')
plot(pca_W.1$harmonics[3,],col=2,ylab='FPC3')
x11()
media <- mean.fd(data_W.fd.1)
par(mfrow=c(2,1))
plot(media,lwd=2,ylim=c(-25,31),ylab='Stops by each our ~ 22/06 - 28/06',main='FPC1')
lines(media+pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=3)
lines(media-pca_W.1$harmonics[1,]*sqrt(pca_W.1$values[1]), col=2)
abline(v=seq(1,168, by=24), lty=2, lwd=3)
abline(v=seq(1,168, by=6), lty=3)
title("FPC1")
plot(media,lwd=2,ylim=c(-2,17),ylab='Stops by each our ~ 22/06 - 28/06',main='FPC2')
lines(media+pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=3)
lines(media-pca_W.1$harmonics[2,]*sqrt(pca_W.1$values[2]), col=2)
abline(v=seq(1,168, by=24), lty=2, lwd=3)
abline(v=seq(1,168, by=6), lty=3)
title("FPC2")
par(mfrow=c(1,3))
plot.pca.fd(pca_W.1, nx=100, pointplot=TRUE, harm=c(1,2,3), expand=0, cycle=FALSE)
# scatter plot of the scores
par(mfrow=c(1,2))
plot(pca_W.1$scores[,1],pca_W.1$scores[,2],xlab="Scores FPC1",ylab="Scores FPC2",lwd=2)
plot(pca_W.1$scores[,1],pca_W.1$scores[,2],type="n",xlab="Scores FPC1",
ylab="Scores FPC2")
text(pca_W.1$scores[,1],pca_W.1$scores[,2], labels=New_York_County_no_river$area, cex=1)
x11()
plot(pca_W.1$scores[,1],pca_W.1$scores[,2],type="n",xlab="Scores FPC1",
ylab="Scores FPC2")
text(pca_W.1$scores[,1],pca_W.1$scores[,2], cex=1)
